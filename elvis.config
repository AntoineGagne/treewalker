[
    {elvis, [
        {rulesets, #{
            treewalker_erl_files => [
                {elvis_text_style, line_length, #{
                    limit => 120,
                    skip_comments => false
                }},
                {elvis_text_style, no_tabs},
                {elvis_text_style, no_trailing_whitespace},
                {elvis_style, macro_names, #{regex => "^([A-Z][A-Z_0-9]+)$"}},
                {elvis_style, macro_module_names},
                {elvis_style, operator_spaces, #{
                    rules =>
                        [
                            {right, "++"},
                            {left, "++"},
                            {right, "="},
                            {left, "="},
                            {right, "+"},
                            {left, "+"},
                            {right, "-"},
                            {left, "-"},
                            {right, "*"},
                            {left, "*"},
                            {right, "/"},
                            {left, "/"},
                            {right, "=<"},
                            {left, "=<"},
                            {right, "<"},
                            {left, "<"},
                            {right, ">"},
                            {left, ">"},
                            {right, ">="},
                            {left, ">="},
                            {right, "=="},
                            {left, "=="},
                            {right, "=:="},
                            {left, "=:="},
                            {right, "/="},
                            {left, "/="},
                            {right, "=/="},
                            {left, "=/="},
                            {right, "--"},
                            {left, "--"},
                            {right, "=>"},
                            {left, "=>"},
                            {right, ":="},
                            {left, ":="},
                            {right, "<-"},
                            {left, "<-"},
                            {right, "<="},
                            {left, "<="},
                            {right, "||"},
                            {left, "||"},
                            {right, "|"},
                            {left, "|"},
                            {right, "::"},
                            {left, "::"},
                            {right, "->"},
                            {left, "->"},
                            {right, ","}
                        ]
                }},
                {elvis_style, no_space, #{
                    rules => [
                        {right, "("},
                        {left, ")"},
                        {left, ","}
                    ]
                }},
                {elvis_style, nesting_level, #{level => 4}},
                {elvis_style, god_modules, #{limit => 25}},
                {elvis_style, invalid_dynamic_call, #{}},
                {elvis_style, used_ignored_variable},
                {elvis_style, no_behavior_info},
                {elvis_style, function_naming_convention, #{regex => "^([a-z][a-z_0-9]*_?)*$"}},
                {elvis_style, variable_naming_convention, #{regex => "^_?([A-Z][0-9_a-zA-Z]*)_?$"}},
                {elvis_style, state_record_and_type},
                {elvis_style, no_spec_with_records},
                {elvis_style, dont_repeat_yourself, #{min_complexity => 25}},
                {elvis_style, max_module_length, #{
                    max_length => 1000,
                    count_comments => false,
                    count_whitespace => false
                }},
                {elvis_style, max_function_length, #{
                    max_length => 100,
                    count_comments => false,
                    count_whitespace => false
                }},
                {elvis_style, no_call, #{no_call_functions => []}},
                {elvis_style, no_debug_call, #{
                    debug_functions => [
                        {ct, pal},
                        {ct, print},
                        {io, format, 1},
                        {io, format, 2}
                    ]
                }},
                {elvis_style, no_common_caveats_call, #{
                    caveat_functions => [
                        {timer, send_after, 2},
                        {timer, send_after, 3},
                        {timer, send_interval, 2},
                        {timer, send_interval, 3},
                        {erlang, size, 1}
                    ]
                }},
                {elvis_style, atom_naming_convention, #{
                    regex => "^([a-z]([a-z0-9][a-z0-9]*_?)*|([a-z][a-z0-9]*_?)*)(_SUITE)?$",
                    enclosed_atoms => ".*"
                }},
                {elvis_style, no_dollar_space, #{}},
                {elvis_style, no_author, #{}},
                {elvis_style, numeric_format, #{
                    regex => "^[^_]*$",
                    int_regex => ".*",
                    float_regex => same
                }},
                {elvis_style, behaviour_spelling, #{spelling => behaviour}},
                {elvis_style, always_shortcircuit, #{}}
            ]
        }},

        {config, [
            #{
                dirs => ["src/**"],
                filter => "*.erl",
                ignore => [],
                ruleset => treewalker_erl_files,
                rules => [
                    {elvis_style, invalid_dynamic_call, #{
                        ignore => [
                            treewalker_crawler,
                            treewalker_worker
                        ]
                    }},
                    {elvis_style, state_record_and_type, #{
                        ignore => [
                            treewalker_crawler,
                            treewalker_dispatcher,
                            treewalker_worker
                        ]
                    }}
                ]
            },
            #{
                dirs => ["."],
                filter => "elvis.config",
                ruleset => elvis_config,
                rules => []
            }
        ]},
        {verbose, true}
    ]}
].
